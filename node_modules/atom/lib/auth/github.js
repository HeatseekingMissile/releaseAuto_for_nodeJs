var utils = require('../utils')
  , req = require('request')
  , qs = require('querystring');

/**
 * Github API calls.
 */

var base_url = 'https://github.com/'
  , authorise_url = base_url + 'login/oauth/authorize'
  , access_url = base_url + 'login/oauth/access_token'
  , account_url = base_url + 'api/v2/json/user/show';

/**
 * Add Github authentication. Visit `/github` to start
 * the process.
 *
 * Config:
 *     `host` the full URL to your app, e.g. 'http://myapp.com'
 *     `github` object containing { key, secret, scope || '' }
 *
 * Callback:
 *     `err` the auth error, or null on no error
 *     `user` an object containing user data and the oauth tokens
 *     `request` the HTTP request object
 *     `response` the HTTP response object
 *     `next`
 *
 * @param {HTTPServer} server
 * @param {object} config
 * @param {function} callbackFn
 * @api public
 */

module.exports = function (server, config, callbackFn) {

    var host = config.host.replace(/\/$/, '')
      , callback_path = '/github/' + utils.randStr(4);

    server.get('/github', function (request, response) {
        var url = authorise_url
                + '?client_id=' + config.github.key
                + '&redirect_uri=' + host + callback_path
                + '&scope=' + (config.github.scope || '');

        response.redirect(url);
    });

    server.get(callback_path, function (request, response, next) {
        function callback(err, body) {
            callbackFn(err, body || null, request, response, next);
        }

        if (!request.session || !request.session.linkedin) {
            return callback('session');
        }

        if (request.param('error')) {
            return callback(request.param('error_reason'));
        }

        var body = {
            client_id: config.github.key
          , redirect_uri: host + callback_path
          , client_secret: config.github.secret
          , code: request.param('code')
        };

        req.post({ url: access_url, body: qs.stringify(body) }, function (err, res, body) {
            if (err || !~body.indexOf('access_token')) {
                return callback(err);
            }

            var access = qs.parse(body)
              , url = account_url + '?access_token=' + access.access_token;

            req(url, function (err, res, body) {
                try {
                    if (err) throw err;
                    body = JSON.parse(body);
                    body.access_token = access.access_token;
                    body.token_type = access.token_type || '';
                    callback(null, body);
                } catch (e) {
                    callback('get profile failed');
                }
            });
        });
    });

};

